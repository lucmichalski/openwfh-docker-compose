version: '2'
services:
  odoo:
    image: odoo:12.0
    container_name: odoo
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.odoo-https.redirectscheme.scheme=https"
      - "traefik.http.routers.odoo-http.entrypoints=web"
      - "traefik.http.routers.odoo-http.rule=Host(`${HOSTNAME}`)"
      - "traefik.http.routers.odoo-http.middlewares=odoo-https@docker"
      - "traefik.http.routers.odoo.entrypoints=websecure"
      - "traefik.http.routers.odoo.rule=Host(`${HOSTNAME}`)"
      - "traefik.http.routers.odoo.tls=true"
      - "traefik.http.routers.odoo.tls.certresolver=${RESOLVER}"
      - "traefik.http.services.odoo.loadbalancer.server.port=${SERVER_PORT}"
    depends_on:
      - db
    networks:
      - default

  db:
    image: postgres:10
    container_name: odoo-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - /srv/odoo/postgres:/var/lib/postgresql/data/pgdata
    networks:
      - default

  odoo-db-backup:
    image: tiredofit/db-backup
    container_name: odoo-db-backup
    links:
      - db
    volumes:
      - /srv/db_backups/odoo:/backup
      - /srv/db_backups/script/post-script.sh:/assets/custom-scripts/post-script.sh
    environment:
      - DB_TYPE=${DB_TYPE}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - DB_DUMP_FREQ=${DB_DUMP_FREQ}
      - DB_DUMP_BEGIN=${DB_DUMP_BEGIN}
      - DB_CLEANUP_TIME=${DB_CLEANUP_TIME}
      - MD5=${MD5}
      - COMPRESSION=${COMPRESSION}
      - SPLIT_DB=${SPLIT_DB}
    restart: always
    networks:
      - default

networks:
  default:
    external:
        name: traefik_default