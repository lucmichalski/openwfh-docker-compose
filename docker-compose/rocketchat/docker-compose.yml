version: '2'
services:
  rocketchat:
    image: rocketchat/rocket.chat:latest
    container_name: rocketchat
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.rocketchat-https.redirectscheme.scheme=https"
      - "traefik.http.routers.rocketchat-http.entrypoints=web"
      - "traefik.http.routers.rocketchat-http.rule=Host(`${HOSTNAME}`)"
      - "traefik.http.routers.rocketchat-http.middlewares=rocketchat-https@docker"
      - "traefik.http.routers.rocketchat.entrypoints=websecure"
      - "traefik.http.routers.rocketchat.rule=Host(`${HOSTNAME}`)"
      - "traefik.http.routers.rocketchat.tls=true"
      - "traefik.http.routers.rocketchat.tls.certresolver=${RESOLVER}"
      - "traefik.http.services.rocketchat.loadbalancer.server.port=${SERVER_PORT}"
      #- "traefik.docker.network=traefik_default"
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    volumes:
      - /srv/rocketchat/data:/app/uploads
    environment:
      - PORT=${SERVER_PORT}
      - ROOT_URL=http://${HOSTNAME}
      - MONGO_URL=${MONGO_URL}
      - MONGO_OPLOG_URL=${MONGO_OPLOG_URL}
      - MAIL_URL=${MAIL_URL}
#       - HTTP_PROXY=http://proxy.domain.com
#       - HTTPS_PROXY=http://proxy.domain.com
    depends_on:
      - mongo
    networks:
      - default

  mongo:
    image: mongo:4.0
    restart: unless-stopped
    volumes:
     - /srv/rocketchat/mongodb:/data/db
     #- ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    labels:
      - "traefik.enable=false"
    networks:
      - default

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:4.0
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo
    networks:
      - default

  rocketchat-db-backup:
    image: tiredofit/db-backup
    container_name: rocketchat-db-backup
    links:
      - mongo
    volumes:
      - /srv/db_backups/rocketchat:/backup
      - /srv/db_backups/script/post-script.sh:/assets/custom-scripts/post-script.sh
    environment:
      - DB_TYPE=${DB_TYPE}
      - DB_HOST=${DB_HOST}
      - DB_DUMP_FREQ=${DB_DUMP_FREQ}
      - DB_DUMP_BEGIN=${DB_DUMP_BEGIN}
      - DB_CLEANUP_TIME=${DB_CLEANUP_TIME}
      - MD5=${MD5}
      - COMPRESSION=${COMPRESSION}
      - SPLIT_DB=${SPLIT_DB}
    restart: always
    networks:
      - default

networks:
  default:
    external:
      name: traefik_default
      

  # # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
  # hubot:
  #   image: rocketchat/hubot-rocketchat:latest
  #   restart: unless-stopped
  #   environment:
  #     - ROCKETCHAT_URL=rocketchat:3000
  #     - ROCKETCHAT_ROOM=GENERAL
  #     - ROCKETCHAT_USER=bot
  #     - ROCKETCHAT_PASSWORD=botpassword
  #     - BOT_NAME=bot
  # # you can add more scripts as you'd like here, they need to be installable by npm
  #     - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
  #   depends_on:
  #     - rocketchat
  #   labels:
  #     - "traefik.enable=false"
  #   volumes:
  #     - ./scripts:/home/hubot/scripts
  # # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
  #   ports:
  #     - 3001:8080